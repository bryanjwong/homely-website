{"version":3,"sources":["images/logo.png","components/Todo.js","components/SplitButton.js","components/Feed.js","components/Register.js","components/LoginButton.js","components/Login.js","components/MyList.js","components/Upload.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","Center","styled","useStyles","makeStyles","root","width","LabelBottomNavigation","classes","useState","value","setValue","BottomNavigation","onChange","event","newValue","className","BottomNavigationAction","label","icon","theme","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","height","transform","color","TitlebarGridList","props","GridList","cellHeight","spacing","cols","data","map","tile","index","GridListTile","key","id","small","image","large","alt","description","GridListTileBar","title","subtitle","owner","actionIcon","IconButton","aria-label","actionPosition","titleBar","Register","onSubmit","e","preventDefault","console","log","target","getElementsByClassName","state","inputs","password","password2","axios","post","then","res","userToken","token","setState","hidden","setToken","catch","err","registerError","passwordError","myInputs","name","username","email","first_name","last_name","errorText","this","activeUser","size","type","placeholder","style","class","Login","loginError","to","MyList","text","user","todos","Upload","completed","activity_type","selectedCategory","bind","i","document","getElementById","rows","onClick","handleCatButton","Container","Header","FeedColor","exampleTodos","App","activeUserToken","activeUserTodos","loggingIn","todoList","isFetchingData","sharedTodoTitle","fetchUserInfo","generateTodoList","addTodo","handleLogout","get","reverse","headers","Authorization","ptodo_set","todo","deleteTodo","upload","handleUploadButton","stopPropagation","push","toggleComplete","length","myTodos","put","newData","newTodo","removedTodo","splice","delete","myCategory","myTodo","myPublicTodo","myData","activeUserName","logButton","userGreeting","myList","tileData","uploadTodo","Grid","container","item","xs","textDecoration","src","Logo","left","Feed","expact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a0f57ec0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.48b6a2b4.png\";","import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\n\nexport class Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{ title: \"Name\", field: \"title\" }],\n      data: [\n        { title: \"40 pushups\" },\n        { title: \"2 leetcode hards\" },\n        { title: \"call my bestfriend Fred\" }\n      ]\n    }\n  }\n\n  render() {\n    return (\n      <MaterialTable\n        title=\"my to-do list\"\n        columns={this.state.columns}\n        data={this.props.todo_set}\n        actions={[\n          {\n            icon: 'cloud-upload',\n            tooltip: 'Upload Todo',\n            onClick: (event, rowData) => {\n              console.log(rowData.name)\n            }\n          }\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n          search: false\n        }}\n        editable={{\n          onRowAdd: newData => {\n            new Promise(resolve => {\n              console.log(\"onRowAdd\");\n              if(!this.props.addTodo(newData)) return;\n              setTimeout(() => {\n                resolve();\n                this.setState(prevState => {\n                  const data = [...prevState.data];\n                  data.push(newData);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            })\n          },\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  this.setState(prevState => {\n                    const data = [...prevState.data];\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                this.setState(prevState => {\n                  const data = [...prevState.data];\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            })\n        }}\n      />\n    );\n  }\n\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport FoodIcon from \"@material-ui/icons/Restaurant\";\nimport FavoriteIcon from \"@material-ui/icons/FitnessCenter\";\nimport ArtIcon from \"@material-ui/icons/Brush\";\nimport GameIcon from \"@material-ui/icons/VideogameAsset\";\nimport HeartIcon from \"@material-ui/icons/Favorite\";\nimport styled from \"styled-components\";\n\nconst Center = styled(\"div\")`\n  justify-content: center;\n  margin: auto;\n`;\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500\n  }\n});\n\nexport default function LabelBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"recents\");\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Center>\n      <BottomNavigation\n        value={value}\n        onChange={handleChange}\n        className={classes.root}\n      >\n        <BottomNavigationAction\n          label=\"All\"\n          value=\"All\"\n          icon={<AllInboxIcon />}\n        />\n        <BottomNavigationAction\n          label=\"Cooking\"\n          value=\"Cooking\"\n          icon={<FoodIcon />}\n        />\n        <BottomNavigationAction label=\"Art\" value=\"Art\" icon={<ArtIcon />} />\n        <BottomNavigationAction\n          label=\"Gaming\"\n          value=\"Gaming\"\n          icon={<GameIcon />}\n        />\n        <BottomNavigationAction\n          label=\"Health\"\n          value=\"Health\"\n          icon={<FavoriteIcon />}\n        />\n        <BottomNavigationAction\n          label=\"Adult Life\"\n          value=\"Adult Life\"\n          icon={<HeartIcon />}\n        />\n      </BottomNavigation>\n    </Center>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport styled from \"styled-components\";\nimport ModalImage from \"react-modal-image\";\n\nimport \"./feed.css\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 1000,\n    height: 580,\n    transform: \"translateZ(0)\"\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  }\n}));\n\nconst TitlebarGridList = props => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList\n        cellHeight={180}\n        spacing={10}\n        className={classes.gridList}\n        cols={3}\n      >\n        {props.data.map((tile, index) => (\n          <GridListTile key={props.data[index].id} cols={props.cols || 1}>\n            <ModalImage\n              small={props.data[index].image}\n              large={props.data[index].image}\n              alt={props.data[index].description}\n            />\n            <GridListTileBar\n              title={props.data[index].title}\n              subtitle={<span>by: {props.data[index].owner}</span>}\n              actionIcon={\n                <IconButton\n                  aria-label={`star ${props.data[index].title}`}\n                  className={classes.icon}\n                >\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"right\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nexport default TitlebarGridList;\n","import React, { Component } from 'react';\nimport \"./register.css\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nexport class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputs: {\n        username: '',\n        email: '',\n        first_name: '',\n        last_name: '',\n        password: '',\n        password2: ''\n      },\n      passwordError: false,\n      registerError: false,\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    console.log(e.target.getElementsByClassName('password-match-error')[0]);\n    if(this.state.inputs.password !== this.state.inputs.password2) {\n      this.setState({ passwordError: true });\n      return;\n    }\n    axios\n      .post('https://homely-bruins.herokuapp.com/api/auth/register', this.state.inputs)\n      .then(res => {\n        let userToken = res.data.token;\n        this.setState({ hidden: true });\n        this.props.setToken(userToken);\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ registerError: true });\n      });\n  }\n\n  onChange = e => {\n    let myInputs = this.state.inputs;\n    myInputs[e.target.name] = e.target.value;\n    this.setState({ inputs: myInputs });\n  }\n\n  render() {\n    let errorText = this.state.registerError ? \"Error: invalid input!\" : \"\";\n    if(this.props.activeUser) return null;\n    return(\n        <div className=\"login-container\">\n            <p className=\"log-header\">Create an account</p>\n            <p className=\"body\">We know staying at home can be hard.\n               That’s why we want to help you stay productive\n               and share your successes with those around you. </p>\n            <p className=\"body\">Create an account to connect with others and\n               exchange ideas on how we can tackle self isolation together.</p>\n            <form onSubmit={this.onSubmit}>\n                <label>Email</label><br></br>\n                <input size=\"50\" type=\"email\" name=\"email\" className=\"login-input\"\n                  placeholder=\"johnnyappleseed@gmail.com\"\n                  onChange={this.onChange} value={this.state.inputs.email}></input><br></br>\n                <label>Username</label><br></br>\n                <input size=\"50\" type=\"text\" name=\"username\" className=\"login-input\"\n                  placeholder=\"johnnyappleseed\"\n                  onChange={this.onChange} value={this.state.inputs.username}></input><br></br>\n                <label>Password</label><br></br>\n                <input size=\"50\" type=\"password\" name=\"password\" className=\"login-input\"\n                  placeholder=\"••••••••••••\"\n                  onChange={this.onChange} value={this.state.inputs.password}></input><br></br>\n                <div className=\"row\">\n                  <label>Verify Password</label>\n                  <label className=\"error\" style={{\n                    'visibility': (this.state.passwordError ? 'visible' : 'hidden')\n                  }}>Your passwords do not match!</label>\n                </div><br></br>\n                <input size=\"50\" type=\"password\" name=\"password2\" className=\"login-input\"\n                  placeholder=\"••••••••••••\"\n                  onChange={this.onChange} value={this.state.inputs.password2}></input><br></br>\n                <div className=\"row\">\n                  <button class=\"styled-button\">Connect</button>\n                  <div className=\"error body\">{errorText}</div>\n                </div>\n            </form>\n        </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class LoginButton extends Component {\n  render() {\n    return(\n      <button>\n        <Link to=\"/login\" className=\"nav-link\">\n          Login\n        </Link>\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport \"./register.css\"\nimport axios from \"axios\"\nimport { Route, Link } from \"react-router-dom\";\n\nexport class Login extends React.Component {\n  state = {\n    inputs: {\n      username: '',\n      password: ''\n    },\n    loginError: false\n  }\n\n\n  onSubmit = e => {\n    e.preventDefault();\n    axios\n      .post('https://homely-bruins.herokuapp.com/api/auth/login', this.state.inputs)\n      .then(res => {\n        let userToken = res.data.token;\n        this.props.setToken(userToken);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({loginError: true});\n      });\n  }\n\n  onChange = e => {\n    let myInputs = this.state.inputs;\n    myInputs[e.target.name] = e.target.value;\n    this.setState({ inputs: myInputs });\n  }\n\n  render() {\n    if(this.props.activeUser) return null;\n    let errorText = this.state.loginError ? \"Error: invalid login!\" : \"\";\n    return(\n        <div className=\"login-container\">\n          <p className=\"log-header\">Sign in</p>\n          <form onSubmit={this.onSubmit}>\n              <label>Username</label><br></br>\n              <input className=\"username login-input\"size=\"50\"\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"johnnyappleseed\"\n                onChange={this.onChange}\n                value={this.state.inputs.username}\n              ></input><br></br>\n              <label>Password</label><br></br>\n              <input className=\"password login-input\" size=\"50\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"••••••••••••\"\n                onChange={this.onChange}\n                value={this.state.inputs.password}></input><br></br>\n              <div className = \"row\">\n                <button className=\"styled-button\" type=\"submit\">Connect</button>\n                <div className=\"error body\">{errorText}</div>\n              </div>\n              <br></br>\n              <Link to=\"/register\" className=\"register-button\">\n                <button className=\"styled-button\">I don't have an account</button>\n              </Link>\n          </form>\n        </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./mylist.css\";\nimport axios from \"axios\";\nimport Fade from \"react-reveal/Fade\";\n\nexport class MyList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  onChange = e => {\n    this.setState({ text: e.target.value });\n  };\n\n  render() {\n    let user = this.props.user ? this.props.user.username + \"'s\" : \"my\";\n    return (\n      <div className=\"list-container\">\n        <div className=\"header\">\n          <h1 className=\"todo-header\">{user} to do list</h1>\n        </div>\n        <hr></hr>\n        <ul className=\"todo-list\">\n          <form\n            className=\"add-todo-form\"\n            onSubmit={() => {\n              this.props.onSubmit(this.state.text);\n              this.setState({\n                text: \"\"\n              });\n            }}\n          >\n            <li>\n              <input\n                onChange={this.onChange}\n                type=\"text\"\n                className=\"new-todo\"\n                value={this.state.text}\n                placeholder=\"Add a new task...\"\n              ></input>\n            </li>\n            <input\n              type=\"submit\"\n              value=\"Submit\"\n              style={{ display: \"none\" }}\n            ></input>\n            {this.props.todos}\n          </form>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport \"./register.css\";\nimport FoodIcon from \"@material-ui/icons/Restaurant\";\nimport FitnessIcon from \"@material-ui/icons/FitnessCenter\";\nimport ArtIcon from \"@material-ui/icons/Brush\";\nimport GameIcon from \"@material-ui/icons/VideogameAsset\";\nimport HeartIcon from \"@material-ui/icons/Favorite\";\n\nexport class Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputs: {\n        title: '',\n        description: '',\n        completed: true,\n        owner: '',\n        image: null,\n        activity_type: ''\n      },\n      selectedCategory: -1\n    };\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  handleCatButton(e, i) {\n    if(this.state.selectedCategory >= 0) {\n      let prevSelected = document.getElementById(\"cat-btn-\" + this.state.selectedCategory);\n      prevSelected.className = \"cat-button\";\n    }\n    let newSelected = document.getElementById(\"cat-btn-\" + i);\n    newSelected.className = \"cat-button-selected\";\n    this.setState({\n      selectedCategory: i\n    });\n  }\n\n  onChange(e) {\n    let myInputs = this.state.inputs;\n    myInputs[e.target.name] = e.target.value;\n    this.setState({ inputs: myInputs });\n  }\n\n  onSubmit() {\n    console.log(\"form submitted\");\n    this.props.onSubmit(this.state)\n    this.setState({\n      inputs: {\n        title: '',\n        description: '',\n        completed: true,\n        owner: '',\n        image: null,\n        activity_type: ''\n      },\n    })\n  }\n\n  render() {\n    let errorText = this.state.registerError ? \"Error: invalid input!\" : \"\";\n    if(this.props.activeUser) return null;\n    return(\n        <div class=\"upload-container\">\n            <p className=\"log-header\">Full Send.</p>\n            <p className=\"body\">It's time to share the small (or big) successes!</p>\n\n                <label>Title</label><br></br>\n                <input size=\"50\" type=\"text\" name=\"title\" className=\"login-input\"\n                  onChange={this.onChange}></input><br></br>\n                <label>Picture/Video</label><br></br>\n                <input type=\"file\" name=\"image\"\n                  className=\"upload-btn styled-button\"/><br></br>\n                <label>Description</label><br></br>\n                <textarea rows=\"2\" cols=\"25\" size=\"200\" type=\"text\" name=\"description\"\n                  className=\"login-input large-login-input\"\n                  placeholder=\"Write a short description about what you accomplished today!\"\n                  onChange={this.onChange} value={this.state.inputs.username}></textarea><br></br>\n                <label>Category</label><br></br>\n                <div className=\"row\">\n                  <div className=\"cat-button\" id=\"cat-btn-1\" onClick={(e) => this.handleCatButton(e, 1)}><FoodIcon /></div>\n                  <div className=\"cat-button\" id=\"cat-btn-2\" onClick={(e) => this.handleCatButton(e, 2)}><ArtIcon/></div>\n                  <div className=\"cat-button\" id=\"cat-btn-3\" onClick={(e) => this.handleCatButton(e, 3)}><GameIcon/></div>\n                  <div className=\"cat-button\" id=\"cat-btn-4\" onClick={(e) => this.handleCatButton(e, 4)}><FitnessIcon /></div>\n                  <div className=\"cat-button\" id=\"cat-btn-5\" onClick={(e) => this.handleCatButton(e, 5)}> <HeartIcon /></div>\n                </div><br></br>\n                <div className=\"container\">\n                  <button onClick={this.onSubmit} class=\"upload-btn styled-button\">Share</button>\n                  <div className=\"error body\">{errorText}</div>\n                </div>\n\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  Link\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport { Todo } from \"./components/Todo\";\nimport SplitButton from \"./components/SplitButton\";\nimport Feed from \"./components/Feed\";\n// import { Register } from \"./components/Accounts/Register\";\n// import { Login } from \"./components/Accounts/Login\";\nimport { LoginButton } from \"./components/LoginButton\";\nimport { Register } from \"./components/Register\";\nimport { Login } from \"./components/Login\";\nimport { MyList } from \"./components/MyList\";\nimport { Upload } from \"./components/Upload\";\nimport Logo from \"./images/logo.png\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ModalImage from \"react-modal-image\";\nimport Fade from \"react-reveal/Fade\";\n\nconst Container = styled(\"div\")`\n  margin: auto;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst Header = styled(\"div\")`\n  padding: 20px;\n  text-align: left;\n  background: #3b55de;\n  color: #f5e5e5;\n  font-family: \"Quando\", serif;\n`;\n\nconst FeedColor = styled(\"div\")`\n  background: #edcadb;\n  padding: 40px;\n  margin: 0px 40px 0px 70px;\n`;\n\nconst Sticky = styled(\"div\")`\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n`;\n\nconst exampleTodos = [\n  { id: 5, title: \"Hit the gym\", completed: false, owner: \"bryan\" },\n  { id: 6, title: \"Pay bills\", completed: true, owner: \"bryan\" },\n  { id: 7, title: \"Meet George\", completed: false, owner: \"bryan\" },\n  { id: 8, title: \"Buy eggs\", completed: false, owner: \"bryan\" },\n  { id: 9, title: \"Read a book\", completed: false, owner: \"bryan\" },\n  {\n    id: 10,\n    title: \"Organize office\",\n    description: \"a\",\n    completed: false,\n    owner: 1\n  }\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeUserToken: null,\n      activeUser: null,\n      activeUserTodos: exampleTodos,\n      loggingIn: false,\n      todoList: [],\n      isFetchingData: false,\n      data: null,\n      sharedTodoTitle: null\n    };\n    this.setToken = this.setToken.bind(this);\n    this.fetchUserInfo = this.fetchUserInfo.bind(this);\n    this.generateTodoList = this.generateTodoList.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentDidMount() {\n    this.generateTodoList();\n    this.setState({ isFetchingData: true });\n    axios\n      .get(\"https://homely-bruins.herokuapp.com/api/todos\")\n      .then(res => {\n        this.setState({\n          isFetchingData: false,\n          data: res.data.reverse()\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  fetchUserInfo() {\n    console.log(\n      \"Attemping to fetch user info using: \",\n      `Token ${this.state.activeUserToken}`\n    );\n    axios\n      .get(\"https://homely-bruins.herokuapp.com/api/auth/user\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.state.activeUserToken}`\n        }\n      })\n      .then(res => {\n        this.setState({\n          activeUserTodos: res.data.ptodo_set,\n          activeUser: res.data\n        });\n        this.generateTodoList();\n      })\n      .catch(err => console.log(err));\n  }\n  setToken(userToken) {\n    this.setState({ activeUserToken: userToken, loggingIn: false });\n    this.fetchUserInfo();\n  }\n  handleLogout() {\n    if (!this.state.activeUserToken) return;\n    console.log(\n      \"Attemping to log out user using: \",\n      `Token ${this.state.activeUserToken}`\n    );\n    axios\n      .post(\"https://homely-bruins.herokuapp.com/api/auth/logout\", null, {\n        headers: {\n          Authorization: `Token ${this.state.activeUserToken}`\n        }\n      })\n      .then(res => {\n        console.log(res);\n        this.setState({\n          activeUserToken: null,\n          activeUser: null,\n          activeUserTodos: exampleTodos\n        });\n        this.generateTodoList();\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleUploadButton(e, i) {\n    let todo = this.state.activeUserTodos[i];\n    document.getElementById(i).className += \" exit-left\";\n    this.setState({\n      sharedTodoTitle: todo.title\n    });\n    this.deleteTodo(i);\n  }\n\n\n  generateTodoList() {\n    if (!this.state.activeUserTodos) return;\n    var todoList = [];\n    for (let i = 0; i < this.state.activeUserTodos.length; i++) {\n      let todo = this.state.activeUserTodos[i];\n      let className = todo.completed ? \"checked\" : \"\";\n      let title = todo.title;\n      let upload = todo.completed\n        ? <div onClick={(e) => {\n            this.handleUploadButton(e, i);\n            e.stopPropagation();\n          }} className=\"upload\">↑</div>\n        : null;\n      todoList.push(\n          <li id={i} onClick={() => {this.toggleComplete(i)}} className={className}>\n            {title}\n            {upload}\n            <div onClick={(e) => {\n              this.deleteTodo(i);\n              e.stopPropagation();\n            }} className=\"close\">X</div>\n          </li>\n\n      );\n    }\n    this.setState({\n      todoList: todoList\n    });\n    console.log(\"The following todo list was generated:\", todoList);\n  }\n\n  toggleComplete(i) {\n    if (this.state.activeUserTodos.length <= i) return;\n    let myTodos = this.state.activeUserTodos;\n    myTodos[i].completed = !myTodos[i].completed;\n\n    // not logged in\n    if (!this.state.activeUser) {\n      console.log(\"Not logged in\");\n      this.setState({\n        activeUserTodos: myTodos\n      });\n      this.generateTodoList();\n      return;\n    }\n    console.log(\"attempting request on\", myTodos[i].id, \"with\", myTodos[i]);\n    axios\n      .put(\n        `https://homely-bruins.herokuapp.com/api/ptodos/${myTodos[i].id}/`,\n        {\n          title: myTodos[i].title,\n          description: myTodos[i].description,\n          completed: myTodos[i].completed\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n      .then(res => {\n        console.log(\"successfully wrote\");\n        this.setState({\n          activeUserTodos: myTodos\n        });\n        this.generateTodoList();\n      })\n      .catch(err => console.log(err));\n  }\n\n  addTodo(newData) {\n    console.log(\"adding\", newData);\n    let newTodo = {\n      title: newData,\n      completed: false,\n      owner: this.state.activeUser ? this.state.activeUser.username : \"\"\n    };\n\n    // If user isn't logged in\n    if (!this.state.activeUser) {\n      let myTodos = this.state.activeUserTodos;\n      myTodos.push(newTodo);\n      this.setState({ activeUserTodos: myTodos });\n      this.generateTodoList();\n      console.log(\"User isnt logged in\");\n      return;\n    }\n\n    console.log(\"Attempting to post\", newTodo);\n    axios\n      .post(\"https://homely-bruins.herokuapp.com/api/ptodos/\", newTodo)\n      .then(res => {\n        console.log(\"Todo successfully posted\")\n        let myTodos = this.state.activeUserTodos;\n        myTodos.push(newTodo);\n        this.setState({ activeUserTodos: myTodos });\n        this.fetchUserInfo();\n        // console.log(myTodos);\n        return;\n      })\n      .catch(err => console.log(err));\n    return;\n  }\n\n  deleteTodo(i) {\n    let myTodos = this.state.activeUserTodos;\n    let removedTodo = myTodos.splice(i, 1)[0];\n    console.log(\"Removed todo:\", removedTodo.title);\n    this.setState({\n      activeUserTodos: myTodos\n    });\n    this.generateTodoList();\n    // If we're logged in\n    if (this.state.activeUser) {\n      console.log(\"Attempting to delete todo with id:\", removedTodo.id);\n      axios\n        .delete(`https://homely-bruins.herokuapp.com/api/ptodos/${removedTodo.id}/`)\n        .then(res => {\n          console.log(\"Successfully deleted todo with id\", removedTodo.id);\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  uploadTodo(state) {\n    let myCategory;\n    switch(state.selectedCategory) {\n      case 1:\n        myCategory = \"food\";\n        break;\n      case 2:\n        myCategory = \"art\";\n        break;\n      case 3:\n        myCategory = \"gaming\";\n        break;\n      case 4:\n        myCategory = \"fitness\";\n        break;\n      case 5:\n        myCategory = \"hobby\";\n        break;\n      default:\n        myCategory = \"other\";\n    }\n    let myTodo = state.inputs;\n    let myPublicTodo = {\n      title: myTodo.title,\n      description: myTodo.description,\n      completed: true,\n      owner: this.state.activeUser ? this.state.activeUser.username : \"Anonymous\",\n      activity_type: myCategory\n    }\n    console.log(\"Attempting to post\", myPublicTodo);\n    axios\n      .post(\"https://homely-bruins.herokuapp.com/api/todos/\", myPublicTodo)\n      .then(res => {\n        console.log(\"Todo successfully posted\")\n        console.log(res.data);\n        let myData = this.state.data;\n        myData.push(res.data);\n        this.setState({\n          data: myData,\n          sharedTodoTitle: null\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    let activeUserName = this.state.activeUser\n      ? this.state.activeUser.username\n      : \"\";\n    let logButton = this.state.activeUser ? (\n      <Link to=\"/\">\n        <button className=\"log-button\" onClick={this.handleLogout}>\n          Logout\n        </button>\n      </Link>\n    ) : (\n      <Link to=\"/login\">\n        <button\n          className=\"log-button\"\n          onClick={() => this.setState({ loggingIn: true })}\n        >\n          Login\n        </button>\n      </Link>\n    );\n    let userGreeting = this.state.activeUser\n      ? \"welcome \" + activeUserName + \"!\"\n      : \"\";\n    let myList = this.state.loggingIn ? null : (\n      <MyList\n        onSubmit={this.addTodo}\n        todos={this.state.todoList}\n        user={this.state.activeUser}\n      ></MyList>\n    );\n\n    if (this.state.isFetchingData || !this.state.data) {\n      return <p></p>;\n    }\n\n    let tileData = this.state.data;\n    let upload = this.state.sharedTodoTitle\n      ? (<div className=\"fade-in\"><Upload onSubmit={(state) => this.uploadTodo(state)} title={this.state.sharedTodoTitle}/></div>) : (<div className=\"fade-out\"><Upload onSubmit={(state) => this.uploadTodo(state)} title={this.state.sharedTodoTitle}/></div>)\n    return (\n      <Container>\n        <Router>\n          <Grid container spacing={0}>\n            <Grid item xs={12}>\n              <Header>\n                <div className=\"logo-text\">\n                  <Link\n                    to=\"/\"\n                    style={{ textDecoration: \"none\", color: \"#F0E9E4\" }}\n                    onClick={() => this.setState({ loggingIn: false })}\n                  >\n                    homely\n                    <img src={Logo} className=\"logo\" />\n                  </Link>\n                  {logButton}\n                  <div className=\"user-greeting\">{userGreeting}</div>\n                </div>\n              </Header>\n            </Grid>\n            <Grid item xs={8}>\n              <FeedColor>\n                <SplitButton></SplitButton>\n                <Fade left>\n                  <Feed className=\"feed\" data={tileData}></Feed>\n                </Fade>\n              </FeedColor>\n            </Grid>\n            <Grid item xs={4}>\n              {myList}\n              {upload}\n              <Switch>\n                <Route\n                  expact\n                  path=\"/register\"\n                  render={props => (\n                    <Register\n                      {...props}\n                      setToken={this.setToken}\n                      activeUser={this.state.activeUser}\n                    />\n                  )}\n                />\n                <Route\n                  expact\n                  path=\"/login\"\n                  render={props => (\n                    <Login\n                      {...props}\n                      setToken={this.setToken}\n                      activeUser={this.state.activeUser}\n                    />\n                  )}\n                />\n              </Switch>\n            </Grid>\n          </Grid>\n          <Grid item xs={4}></Grid>\n        </Router>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}